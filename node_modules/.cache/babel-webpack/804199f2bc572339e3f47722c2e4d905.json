{"ast":null,"code":"import { transferArrayItem } from '@angular/cdk/drag-drop';\nimport { TaskDialogComponent } from './task-dialog/task-dialog.component';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/fire/firestore\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/cdk/drag-drop\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"./task/task.component\";\n\nfunction AppComponent_p_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 14);\n    i0.ɵɵtext(1, \"Nothing to do now\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_app_task_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-task\", 15);\n    i0.ɵɵlistener(\"edit\", function AppComponent_app_task_24_Template_app_task_edit_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.editTask(\"todo\", $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"task\", task_r9);\n  }\n}\n\nfunction AppComponent_p_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 14);\n    i0.ɵɵtext(1, \"No task in progress rn\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_app_task_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-task\", 15);\n    i0.ɵɵlistener(\"edit\", function AppComponent_app_task_34_Template_app_task_edit_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.editTask(\"inProgress\", $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"task\", task_r12);\n  }\n}\n\nfunction AppComponent_p_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 14);\n    i0.ɵɵtext(1, \"Nothing is completed rn\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_app_task_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-task\", 15);\n    i0.ɵɵlistener(\"edit\", function AppComponent_app_task_44_Template_app_task_edit_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.editTask(\"done\", $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"task\", task_r15);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst getObservable = collection => {\n  const subject = new BehaviorSubject([]);\n  collection.valueChanges({\n    idField: 'id'\n  }).subscribe(val => {\n    subject.next(val);\n  });\n  return subject;\n};\n\nexport class AppComponent {\n  // injecting AngularFirestore in AppComponent's constructor\n  constructor(dialog, store) {\n    this.dialog = dialog;\n    this.store = store; // use angularFirestore to get the collection's content directly from the database.\n\n    this.todo = getObservable(this.store.collection('todo'));\n    this.inProgress = getObservable(this.store.collection('inProgress'));\n    this.done = getObservable(this.store.collection('done'));\n  } //edit method to edit tasks\n\n\n  editTask(list, task) {\n    const dialogRef = this.dialog.open(TaskDialogComponent, {\n      width: '270px',\n      data: {\n        task,\n        enableDelete: true\n      }\n    }); //delete the taks if the delete button clicked\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result.delete) {\n        //access the target task using firebase sdk and delete or update\n        this.store.collection(list).doc(task.id).delete();\n      } else {\n        this.store.collection(list).doc(task.id).update(task);\n      }\n    });\n  } //drop the list from taks when called\n\n\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      return;\n    }\n\n    const item = event.previousContainer.data[event.previousIndex];\n    this.store.firestore.runTransaction(() => {\n      const promise = Promise.all([this.store.collection(event.previousContainer.id).doc(item.id).delete(), this.store.collection(event.container.id).add(item)]);\n      return promise;\n    });\n    transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n  } //func to add a new task\n\n\n  newTask() {\n    const dialogRef = this.dialog.open(TaskDialogComponent, {\n      //open a dialog when user tries to add a new task\n      width: '270px',\n      data: {\n        task: {}\n      }\n    }); //add the new task to the to do list\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!result) {\n        return;\n      }\n\n      this.store.collection('todo').add(result.task);\n    });\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.AngularFirestore));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 46,\n  vars: 39,\n  consts: [[\"color\", \"secondary\"], [\"src\", \"../src/app/logo.png\"], [1, \"content-wrapper\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"container-wrapper\"], [1, \"container\"], [\"cdkDropList\", \"\", \"id\", \"todo\", 1, \"list\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\"], [\"todoList\", \"cdkDropList\"], [\"class\", \"empty-label\", 4, \"ngIf\"], [\"cdkDrag\", \"\", 3, \"task\", \"edit\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDropList\", \"\", \"id\", \"inProgress\", 1, \"list\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\"], [\"inProgressList\", \"cdkDropList\"], [\"cdkDropList\", \"\", \"id\", \"done\", 1, \"list\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\"], [\"doneList\", \"cdkDropList\"], [1, \"empty-label\"], [\"cdkDrag\", \"\", 3, \"task\", \"edit\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementStart(2, \"span\");\n      i0.ɵɵtext(3, \"SG Solutions \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"i\");\n      i0.ɵɵtext(6, \"To do List- made by SG Solutions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2);\n      i0.ɵɵelementStart(8, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n        return ctx.newTask();\n      });\n      i0.ɵɵelementStart(9, \"mat-icon\");\n      i0.ɵɵtext(10, \"add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \" Add New Task to do \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 4);\n      i0.ɵɵelementStart(13, \"div\", 5);\n      i0.ɵɵtext(14, \" ... \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 4);\n      i0.ɵɵelementStart(16, \"div\", 5);\n      i0.ɵɵelementStart(17, \"h2\");\n      i0.ɵɵtext(18, \"To Do\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-card\", 6, 7);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function AppComponent_Template_mat_card_cdkDropListDropped_19_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵpipe(21, \"async\");\n      i0.ɵɵtemplate(22, AppComponent_p_22_Template, 2, 0, \"p\", 8);\n      i0.ɵɵpipe(23, \"async\");\n      i0.ɵɵtemplate(24, AppComponent_app_task_24_Template, 1, 1, \"app-task\", 9);\n      i0.ɵɵpipe(25, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 5);\n      i0.ɵɵelementStart(27, \"h2\");\n      i0.ɵɵtext(28, \"In progress\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"mat-card\", 10, 11);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function AppComponent_Template_mat_card_cdkDropListDropped_29_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵpipe(31, \"async\");\n      i0.ɵɵtemplate(32, AppComponent_p_32_Template, 2, 0, \"p\", 8);\n      i0.ɵɵpipe(33, \"async\");\n      i0.ɵɵtemplate(34, AppComponent_app_task_34_Template, 1, 1, \"app-task\", 9);\n      i0.ɵɵpipe(35, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 5);\n      i0.ɵɵelementStart(37, \"h2\");\n      i0.ɵɵtext(38, \"Completed \\u2713\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"mat-card\", 12, 13);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function AppComponent_Template_mat_card_cdkDropListDropped_39_listener($event) {\n        return ctx.drop($event);\n      });\n      i0.ɵɵpipe(41, \"async\");\n      i0.ɵɵtemplate(42, AppComponent_p_42_Template, 2, 0, \"p\", 8);\n      i0.ɵɵpipe(43, \"async\");\n      i0.ɵɵtemplate(44, AppComponent_app_task_44_Template, 1, 1, \"app-task\", 9);\n      i0.ɵɵpipe(45, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(20);\n\n      const _r3 = i0.ɵɵreference(30);\n\n      const _r6 = i0.ɵɵreference(40);\n\n      let tmp_2_0;\n      let tmp_6_0;\n      let tmp_10_0;\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"cdkDropListData\", i0.ɵɵpipeBind1(21, 12, ctx.todo))(\"cdkDropListConnectedTo\", i0.ɵɵpureFunction2(30, _c0, _r6, _r3));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = i0.ɵɵpipeBind1(23, 14, ctx.todo)) == null ? null : tmp_2_0.length) === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(25, 16, ctx.todo));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"cdkDropListData\", i0.ɵɵpipeBind1(31, 18, ctx.inProgress))(\"cdkDropListConnectedTo\", i0.ɵɵpureFunction2(33, _c0, _r0, _r6));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = i0.ɵɵpipeBind1(33, 20, ctx.inProgress)) == null ? null : tmp_6_0.length) === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(35, 22, ctx.inProgress));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"cdkDropListData\", i0.ɵɵpipeBind1(41, 24, ctx.done))(\"cdkDropListConnectedTo\", i0.ɵɵpureFunction2(36, _c0, _r0, _r3));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = i0.ɵɵpipeBind1(43, 26, ctx.done)) == null ? null : tmp_10_0.length) === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(45, 28, ctx.done));\n    }\n  },\n  directives: [i3.MatToolbar, i4.MatButton, i5.MatIcon, i6.MatCard, i7.CdkDropList, i8.NgIf, i8.NgForOf, i9.TaskComponent, i7.CdkDrag],\n  pipes: [i8.AsyncPipe],\n  styles: [\"mat-toolbar[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n}\\n\\n.content-wrapper[_ngcontent-%COMP%] {\\n  max-width: 1400px;\\n  margin: auto;\\n}\\n\\n.container-wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-around;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  width: 400px;\\n  margin: 0 25px 25px 0;\\n}\\n\\n.list[_ngcontent-%COMP%] {\\n  border: solid 1px black;\\n  min-height: 80px;\\n  border-radius: 4px;\\n}\\n\\napp-new-task[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n}\\n\\n.empty-label[_ngcontent-%COMP%] {\\n  font-size: 2em;\\n  padding-top: 10px;\\n  text-align: center;\\n  opacity: 0.2;\\n}\\n\\n.cdk-drag-animating[_ngcontent-%COMP%] {\\n  transition: transform 250ms;\\n}\\n\\n.cdk-drag-placeholder[_ngcontent-%COMP%] {\\n  opacity: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxZQUFZO0VBQ1oscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0FBQ2Q7O0FBQ0E7RUFDRSwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxVQUFVO0FBQ1oiLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtdG9vbGJhciB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbm1hdC10b29sYmFyID4gc3BhbiB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4uY29udGVudC13cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLmNvbnRhaW5lci13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogMCAyNXB4IDI1cHggMDtcbn1cblxuLmxpc3Qge1xuICBib3JkZXI6IHNvbGlkIDFweCBibGFjaztcbiAgbWluLWhlaWdodDogODBweDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuXG5hcHAtbmV3LXRhc2sge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4uZW1wdHktbGFiZWwge1xuICBmb250LXNpemU6IDJlbTtcbiAgcGFkZGluZy10b3A6IDEwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgb3BhY2l0eTogMC4yO1xufVxuLmNkay1kcmFnLWFuaW1hdGluZyB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyNTBtcztcbn1cblxuLmNkay1kcmFnLXBsYWNlaG9sZGVyIHtcbiAgb3BhY2l0eTogMDtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/sagar/Desktop/kanban-fire/src/app/app.component.ts","/Users/sagar/Desktop/kanban-fire/src/app/app.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { Task } from './task/task';\nimport { CdkDragDrop, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TaskDialogResult, TaskDialogComponent } from './task-dialog/task-dialog.component';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { BehaviorSubject } from 'rxjs';\n\nconst getObservable = (collection: AngularFirestoreCollection<Task>) => {\n  const subject = new BehaviorSubject<Task[]>([]);\n  collection.valueChanges({ idField: 'id' }).subscribe((val: Task[]) => {\n    subject.next(val);\n  });\n  return subject;\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  // use angularFirestore to get the collection's content directly from the database.\n  todo = getObservable(this.store.collection('todo')) as Observable<Task[]>;\n  inProgress = getObservable(this.store.collection('inProgress')) as Observable<Task[]>;\n  done = getObservable(this.store.collection('done')) as Observable<Task[]>;\n  \n  //edit method to edit tasks\n  editTask(list: 'done' | 'todo' | 'inProgress', task: Task): void {\n    const dialogRef = this.dialog.open(TaskDialogComponent, {\n      width: '270px',\n      data: {\n        task,\n        enableDelete: true,\n      },\n    });\n    //delete the taks if the delete button clicked\n    dialogRef.afterClosed().subscribe((result: TaskDialogResult) => {\n      if (result.delete) {\n        //access the target task using firebase sdk and delete or update\n        this.store.collection(list).doc(task.id).delete();\n      } else {\n        this.store.collection(list).doc(task.id).update(task);\n      }\n    });\n  }\n\n  //drop the list from taks when called\n  drop(event: CdkDragDrop<Task[]>): void {\n    if (event.previousContainer === event.container) {\n      return;\n    }\n    const item = event.previousContainer.data[event.previousIndex];\n    this.store.firestore.runTransaction(() => {\n      const promise = Promise.all([\n        this.store.collection(event.previousContainer.id).doc(item.id).delete(),\n        this.store.collection(event.container.id).add(item),\n      ]);\n      return promise;\n    });\n    transferArrayItem(\n      event.previousContainer.data,\n      event.container.data,\n      event.previousIndex,\n      event.currentIndex\n    );\n  }\n  // injecting AngularFirestore in AppComponent's constructor\n  constructor(private dialog: MatDialog,private store: AngularFirestore) {}\n\n  //func to add a new task\n  newTask(): void {\n    const dialogRef = this.dialog.open(TaskDialogComponent, {\n      //open a dialog when user tries to add a new task\n      width: '270px',\n      data: {\n        task: {},\n      },\n    });\n    //add the new task to the to do list\n    dialogRef\n      .afterClosed()\n      .subscribe((result: TaskDialogResult) => {\n        if (!result) {\n          return;\n        }\n        this.store.collection('todo').add(result.task);\n      });\n  }\n}\n","<mat-toolbar color=\"secondary\">\n  <!-- icon -->\n  <img src=\"../src/app/logo.png\">\n  <!-- title of the app -->\n  <span>SG Solutions </span>\n  <hr>\n  <i>To do List- made by SG Solutions</i>\n</mat-toolbar>\n\n<!-- function to create new tasks -->\n<div class=\"content-wrapper\">\n  <button (click)=\"newTask()\" mat-button>\n    <mat-icon>add</mat-icon> Add New Task to do\n  </button>\n\n  <div class=\"container-wrapper\">\n    <div class=\"container\">\n      ...\n    </div>\n</div>\n\n<!-- initilaize the task -->\n<div class=\"container-wrapper\">\n  <div class=\"container\">\n    <h2>To Do</h2>\n\n    <!-- use matcard material so that dropping of task can be done later -->\n    <!-- cdkDropListData to specify our array data -->\n    <!-- cdkDropListDropped- use this to handle the drop event -->\n    <mat-card\n    cdkDropList\n    id=\"todo\"\n    #todoList=\"cdkDropList\"\n    [cdkDropListData]=\"todo | async\"\n    [cdkDropListConnectedTo]=\"[doneList, inProgressList]\"\n    (cdkDropListDropped)=\"drop($event)\"\n    class=\"list\">\n      <!-- show empty if there is no any list -->\n    <p class=\"empty-label\" *ngIf=\"(todo | async)?.length === 0\">Nothing to do now</p>\n      <!-- handle the edit tasks here by calling the edittask method -->\n    <app-task (edit)=\"editTask('todo', $event)\" *ngFor=\"let task of todo | async\" cdkDrag [task]=\"task\"></app-task>\n  </mat-card>\n  </div>\n\n  <div class=\"container\">\n    <h2>In progress</h2>\n\n    <mat-card\n        cdkDropList\n        id=\"inProgress\"\n        #inProgressList=\"cdkDropList\"\n        [cdkDropListData]=\"inProgress | async\"\n        [cdkDropListConnectedTo]=\"[todoList, doneList]\"\n        (cdkDropListDropped)=\"drop($event)\"\n        class=\"list\">\n        <p class=\"empty-label\" *ngIf=\"(inProgress | async)?.length === 0\">No task in progress rn</p>\n        <app-task (edit)=\"editTask('inProgress', $event)\" *ngFor=\"let task of inProgress | async\" cdkDrag [task]=\"task\"></app-task>\n      </mat-card>\n  </div>\n\n  <div class=\"container\">\n    <h2>Completed ✓</h2>\n\n    <mat-card\n        cdkDropList\n        id=\"done\"\n        #doneList=\"cdkDropList\"\n        [cdkDropListData]=\"done | async\"\n        [cdkDropListConnectedTo]=\"[todoList, inProgressList]\"\n        (cdkDropListDropped)=\"drop($event)\"\n        class=\"list\">\n        <p class=\"empty-label\" *ngIf=\"(done | async)?.length === 0\">Nothing is completed rn</p>\n        <app-task (edit)=\"editTask('done', $event)\" *ngFor=\"let task of done | async\" cdkDrag [task]=\"task\"></app-task>\n      </mat-card>\n  </div>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}